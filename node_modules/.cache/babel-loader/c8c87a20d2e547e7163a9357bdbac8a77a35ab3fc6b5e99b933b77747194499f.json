{"ast":null,"code":"import{useCallback}from'react';export const usePDFDownload=()=>{const downloadPDF=useCallback(async(pdfPath,filename)=>{try{// Method 1: Try fetch with blob\nconst response=await fetch(pdfPath,{method:'GET',headers:{'Accept':'application/pdf'}});if(!response.ok){throw new Error(`HTTP error! status: ${response.status}`);}const blob=await response.blob();// Check if the response is actually a PDF\nif(blob.type!=='application/pdf'&&!blob.type.includes('pdf')){console.warn('Response might not be a PDF, trying alternative method');throw new Error('Invalid PDF response');}const url=window.URL.createObjectURL(blob);const link=document.createElement('a');link.href=url;link.download=filename||pdfPath.split('/').pop();document.body.appendChild(link);link.click();document.body.removeChild(link);window.URL.revokeObjectURL(url);}catch(error){console.error('Fetch method failed, trying direct download:',error);// Method 2: Direct link with download attribute\ntry{const link=document.createElement('a');link.href=pdfPath;link.download=filename||pdfPath.split('/').pop();link.target='_blank';link.rel='noopener noreferrer';document.body.appendChild(link);link.click();document.body.removeChild(link);}catch(directError){console.error('Direct download also failed:',directError);// Method 3: Fallback to window.open\nwindow.open(pdfPath,'_blank');}}},[]);return{downloadPDF};};","map":{"version":3,"names":["useCallback","usePDFDownload","downloadPDF","pdfPath","filename","response","fetch","method","headers","ok","Error","status","blob","type","includes","console","warn","url","window","URL","createObjectURL","link","document","createElement","href","download","split","pop","body","appendChild","click","removeChild","revokeObjectURL","error","target","rel","directError","open"],"sources":["/Users/tintin/Documents/tin-portfolio/src/hooks/usePDFDownload.js"],"sourcesContent":["import { useCallback } from 'react';\n\nexport const usePDFDownload = () => {\n  const downloadPDF = useCallback(async (pdfPath, filename) => {\n    try {\n      // Method 1: Try fetch with blob\n      const response = await fetch(pdfPath, {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/pdf',\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const blob = await response.blob();\n      \n      // Check if the response is actually a PDF\n      if (blob.type !== 'application/pdf' && !blob.type.includes('pdf')) {\n        console.warn('Response might not be a PDF, trying alternative method');\n        throw new Error('Invalid PDF response');\n      }\n\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = filename || pdfPath.split('/').pop();\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      window.URL.revokeObjectURL(url);\n      \n    } catch (error) {\n      console.error('Fetch method failed, trying direct download:', error);\n      \n      // Method 2: Direct link with download attribute\n      try {\n        const link = document.createElement('a');\n        link.href = pdfPath;\n        link.download = filename || pdfPath.split('/').pop();\n        link.target = '_blank';\n        link.rel = 'noopener noreferrer';\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      } catch (directError) {\n        console.error('Direct download also failed:', directError);\n        \n        // Method 3: Fallback to window.open\n        window.open(pdfPath, '_blank');\n      }\n    }\n  }, []);\n\n  return { downloadPDF };\n}; "],"mappings":"AAAA,OAASA,WAAW,KAAQ,OAAO,CAEnC,MAAO,MAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAClC,KAAM,CAAAC,WAAW,CAAGF,WAAW,CAAC,MAAOG,OAAO,CAAEC,QAAQ,GAAK,CAC3D,GAAI,CACF;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACH,OAAO,CAAE,CACpCI,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,QAAQ,CAAE,iBACZ,CACF,CAAC,CAAC,CAEF,GAAI,CAACH,QAAQ,CAACI,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,uBAAuBL,QAAQ,CAACM,MAAM,EAAE,CAAC,CAC3D,CAEA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACO,IAAI,CAAC,CAAC,CAElC;AACA,GAAIA,IAAI,CAACC,IAAI,GAAK,iBAAiB,EAAI,CAACD,IAAI,CAACC,IAAI,CAACC,QAAQ,CAAC,KAAK,CAAC,CAAE,CACjEC,OAAO,CAACC,IAAI,CAAC,wDAAwD,CAAC,CACtE,KAAM,IAAI,CAAAN,KAAK,CAAC,sBAAsB,CAAC,CACzC,CAEA,KAAM,CAAAO,GAAG,CAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACR,IAAI,CAAC,CAC5C,KAAM,CAAAS,IAAI,CAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC,CACxCF,IAAI,CAACG,IAAI,CAAGP,GAAG,CACfI,IAAI,CAACI,QAAQ,CAAGrB,QAAQ,EAAID,OAAO,CAACuB,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,CACpDL,QAAQ,CAACM,IAAI,CAACC,WAAW,CAACR,IAAI,CAAC,CAC/BA,IAAI,CAACS,KAAK,CAAC,CAAC,CACZR,QAAQ,CAACM,IAAI,CAACG,WAAW,CAACV,IAAI,CAAC,CAC/BH,MAAM,CAACC,GAAG,CAACa,eAAe,CAACf,GAAG,CAAC,CAEjC,CAAE,MAAOgB,KAAK,CAAE,CACdlB,OAAO,CAACkB,KAAK,CAAC,8CAA8C,CAAEA,KAAK,CAAC,CAEpE;AACA,GAAI,CACF,KAAM,CAAAZ,IAAI,CAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC,CACxCF,IAAI,CAACG,IAAI,CAAGrB,OAAO,CACnBkB,IAAI,CAACI,QAAQ,CAAGrB,QAAQ,EAAID,OAAO,CAACuB,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,CACpDN,IAAI,CAACa,MAAM,CAAG,QAAQ,CACtBb,IAAI,CAACc,GAAG,CAAG,qBAAqB,CAChCb,QAAQ,CAACM,IAAI,CAACC,WAAW,CAACR,IAAI,CAAC,CAC/BA,IAAI,CAACS,KAAK,CAAC,CAAC,CACZR,QAAQ,CAACM,IAAI,CAACG,WAAW,CAACV,IAAI,CAAC,CACjC,CAAE,MAAOe,WAAW,CAAE,CACpBrB,OAAO,CAACkB,KAAK,CAAC,8BAA8B,CAAEG,WAAW,CAAC,CAE1D;AACAlB,MAAM,CAACmB,IAAI,CAAClC,OAAO,CAAE,QAAQ,CAAC,CAChC,CACF,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAED,WAAY,CAAC,CACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}