{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback } from 'react';\nexport const usePDFDownload = () => {\n  _s();\n  const downloadPDF = useCallback(async (pdfPath, filename) => {\n    try {\n      // Method 1: Try fetch with blob\n      const response = await fetch(pdfPath, {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/pdf'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const blob = await response.blob();\n\n      // Check if the response is actually a PDF\n      if (blob.type !== 'application/pdf' && !blob.type.includes('pdf')) {\n        console.warn('Response might not be a PDF, trying alternative method');\n        throw new Error('Invalid PDF response');\n      }\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = filename || pdfPath.split('/').pop();\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      window.URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error('Fetch method failed, trying direct download:', error);\n\n      // Method 2: Direct link with download attribute\n      try {\n        const link = document.createElement('a');\n        link.href = pdfPath;\n        link.download = filename || pdfPath.split('/').pop();\n        link.target = '_blank';\n        link.rel = 'noopener noreferrer';\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      } catch (directError) {\n        console.error('Direct download also failed:', directError);\n\n        // Method 3: Fallback to window.open\n        window.open(pdfPath, '_blank');\n      }\n    }\n  }, []);\n  return {\n    downloadPDF\n  };\n};\n_s(usePDFDownload, \"VOFzXvuYHn2g53c3fHwwJIEmuH8=\");","map":{"version":3,"names":["useCallback","usePDFDownload","_s","downloadPDF","pdfPath","filename","response","fetch","method","headers","ok","Error","status","blob","type","includes","console","warn","url","window","URL","createObjectURL","link","document","createElement","href","download","split","pop","body","appendChild","click","removeChild","revokeObjectURL","error","target","rel","directError","open"],"sources":["/Users/tintin/Documents/tin-portfolio/src/hooks/usePDFDownload.js"],"sourcesContent":["import { useCallback } from 'react';\n\nexport const usePDFDownload = () => {\n  const downloadPDF = useCallback(async (pdfPath, filename) => {\n    try {\n      // Method 1: Try fetch with blob\n      const response = await fetch(pdfPath, {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/pdf',\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const blob = await response.blob();\n      \n      // Check if the response is actually a PDF\n      if (blob.type !== 'application/pdf' && !blob.type.includes('pdf')) {\n        console.warn('Response might not be a PDF, trying alternative method');\n        throw new Error('Invalid PDF response');\n      }\n\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = filename || pdfPath.split('/').pop();\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      window.URL.revokeObjectURL(url);\n      \n    } catch (error) {\n      console.error('Fetch method failed, trying direct download:', error);\n      \n      // Method 2: Direct link with download attribute\n      try {\n        const link = document.createElement('a');\n        link.href = pdfPath;\n        link.download = filename || pdfPath.split('/').pop();\n        link.target = '_blank';\n        link.rel = 'noopener noreferrer';\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      } catch (directError) {\n        console.error('Direct download also failed:', directError);\n        \n        // Method 3: Fallback to window.open\n        window.open(pdfPath, '_blank');\n      }\n    }\n  }, []);\n\n  return { downloadPDF };\n}; "],"mappings":";AAAA,SAASA,WAAW,QAAQ,OAAO;AAEnC,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAMC,WAAW,GAAGH,WAAW,CAAC,OAAOI,OAAO,EAAEC,QAAQ,KAAK;IAC3D,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAO,EAAE;QACpCI,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,QAAQ,EAAE;QACZ;MACF,CAAC,CAAC;MAEF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBL,QAAQ,CAACM,MAAM,EAAE,CAAC;MAC3D;MAEA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;;MAElC;MACA,IAAIA,IAAI,CAACC,IAAI,KAAK,iBAAiB,IAAI,CAACD,IAAI,CAACC,IAAI,CAACC,QAAQ,CAAC,KAAK,CAAC,EAAE;QACjEC,OAAO,CAACC,IAAI,CAAC,wDAAwD,CAAC;QACtE,MAAM,IAAIN,KAAK,CAAC,sBAAsB,CAAC;MACzC;MAEA,MAAMO,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACR,IAAI,CAAC;MAC5C,MAAMS,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACxCF,IAAI,CAACG,IAAI,GAAGP,GAAG;MACfI,IAAI,CAACI,QAAQ,GAAGrB,QAAQ,IAAID,OAAO,CAACuB,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC;MACpDL,QAAQ,CAACM,IAAI,CAACC,WAAW,CAACR,IAAI,CAAC;MAC/BA,IAAI,CAACS,KAAK,CAAC,CAAC;MACZR,QAAQ,CAACM,IAAI,CAACG,WAAW,CAACV,IAAI,CAAC;MAC/BH,MAAM,CAACC,GAAG,CAACa,eAAe,CAACf,GAAG,CAAC;IAEjC,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdlB,OAAO,CAACkB,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;;MAEpE;MACA,IAAI;QACF,MAAMZ,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;QACxCF,IAAI,CAACG,IAAI,GAAGrB,OAAO;QACnBkB,IAAI,CAACI,QAAQ,GAAGrB,QAAQ,IAAID,OAAO,CAACuB,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC;QACpDN,IAAI,CAACa,MAAM,GAAG,QAAQ;QACtBb,IAAI,CAACc,GAAG,GAAG,qBAAqB;QAChCb,QAAQ,CAACM,IAAI,CAACC,WAAW,CAACR,IAAI,CAAC;QAC/BA,IAAI,CAACS,KAAK,CAAC,CAAC;QACZR,QAAQ,CAACM,IAAI,CAACG,WAAW,CAACV,IAAI,CAAC;MACjC,CAAC,CAAC,OAAOe,WAAW,EAAE;QACpBrB,OAAO,CAACkB,KAAK,CAAC,8BAA8B,EAAEG,WAAW,CAAC;;QAE1D;QACAlB,MAAM,CAACmB,IAAI,CAAClC,OAAO,EAAE,QAAQ,CAAC;MAChC;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAED;EAAY,CAAC;AACxB,CAAC;AAACD,EAAA,CAvDWD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}